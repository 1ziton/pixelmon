(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{RTYZ:function(e,o,t){"use strict";t.r(o);var a=t("8Y7J"),d=t("0qEG"),c=function(){this.item={cols:1,urls:{"en-US":"packages/mock/docs/getting-started.en-US.md","zh-CN":"packages/mock/docs/getting-started.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><article><h2 id="Foreword">Foreword<a onclick="window.location.hash = \'Foreword\'" class="anchor">#</a></h2><p><code>@pixelmon/mock</code> is a simulation data generator to help the front-end to develop and prototype separate from the back-end progress and reduce some monotony particularly while writing automated tests.</p><p><strong>Features</strong></p><ul><li><p>All of the Angular projects</p></li><li><p>Unobtrusive</p></li><li><p>Simple usage</p></li><li><p>Support <a target="_blank" href="http://mockjs.com/" data-url="http://mockjs.com/">mock.js</a></p></li></ul><h2 id="Usage">Usage<a onclick="window.location.hash = \'Usage\'" class="anchor">#</a></h2><p>Install <code>@pixelmon/mock</code> from <code>yarn</code>.</p><pre class="hljs language-bash"><code>yarn add @pixelmon/mock -D</code></pre><p>Import the <a href="/mock/rule" data-url="/mock/rule">mock rule data</a> and <code>PixelmonMockModule</code> in to your root <code>AppModule</code>.</p><pre class="hljs language-ts"><code>import { PixelmonMockModule } from \'@pixelmon/mock\';\nimport * as MOCKDATA from \'../../_mock\';\n// Configuration for test environment only.\nimport { environment } from \'../environments/environment\';\nconst MOCKMODULE = !environment.production ? [ PixelmonMockModule.forRoot({ data: MOCKDATA }) ] : [];\n\n@NgModule({\n  imports: [\n    ...MOCKMODULE\n  ]\n})</code></pre><h3 id="MockOptions">MockOptions<a onclick="window.location.hash = \'MockOptions\'" class="anchor">#</a></h3><p>The <code>forRoot</code> parameters:</p><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>[data]</code></td><td><code>any</code></td><td>-</td><td>Mock data rule</td></tr><tr><td><code>[delay]</code></td><td><code>number</code></td><td><code>300</code></td><td>Request delay, unit is milliseconds</td></tr><tr><td><code>[force]</code></td><td><code>boolean</code></td><td><code>false</code></td><td>Whether to force all requests to Mock, <code>true</code> means to return a 404 error directly when the requested URL does not exist, <code>false</code> means to send a real HTTP request when the request is missed</td></tr><tr><td><code>[log]</code></td><td><code>boolean</code></td><td><code>true</code></td><td>Whether to print Mock request information, make up for the browser without Network information; it will output <span>\ud83d\udc7dMock</span> when hit</td></tr><tr><td><code>[executeOtherInterceptors]</code></td><td><code>boolean</code></td><td><code>true</code></td><td>Whether continue to call other interceptor <code>intercept</code> method after mock rule hit</td></tr></tbody></table><blockquote><p><strong>Lazy modules</strong> need to import <code>forChild</code>, You can import <code>forChild</code> in the <code>SharedModule</code>.</p></blockquote></article></section>',meta:{order:1,title:"Getting Started",type:"Documents"},toc:[{id:"Foreword",title:"Foreword",h:2},{id:"Usage",title:"Usage",h:2},{id:"MockOptions",title:"MockOptions",h:3}]},"zh-CN":{content:'<section class="markdown"><article><h2 id="\u5199\u5728\u524d\u9762">\u5199\u5728\u524d\u9762<a onclick="window.location.hash = \'\u5199\u5728\u524d\u9762\'" class="anchor">#</a></h2><p>Mock \u662f\u6307\u901a\u8fc7\u751f\u6210\u6a21\u62df\u6570\u636e\u8ba9\u524d\u7aef\u5f00\u53d1\u4eba\u5458\u72ec\u7acb\u4e8e\u540e\u7aef\u8fdb\u884c\u5f00\u53d1\uff0c\u6709\u65f6\u6211\u4eec\u4e5f\u4f1a\u8fd0\u7528\u5728\u6d4b\u8bd5\u73af\u5883\u4e2d\u3002</p><p><code>@pixelmon/mock</code> \u662f\u4e00\u4e2a\u7b80\u5355 Mock \u529f\u80fd\uff0c\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u7279\u5f81\uff1a</p><ul><li><p>\u4efb\u610f Angular \u9879\u76ee</p></li><li><p>\u5f00\u53d1\u65e0\u4fb5\u5165</p></li><li><p>\u8d85\u7b80\u5355\u7528\u6cd5</p></li><li><p>\u652f\u6301 <a target="_blank" href="http://mockjs.com/" data-url="http://mockjs.com/">mock.js</a></p></li></ul><h2 id="\u5982\u4f55\u4f7f\u7528">\u5982\u4f55\u4f7f\u7528<a onclick="window.location.hash = \'\u5982\u4f55\u4f7f\u7528\'" class="anchor">#</a></h2><p>\u5b89\u88c5 <code>@pixelmon/mock</code> \u4f9d\u8d56\u5305\uff1a</p><pre class="hljs language-bash"><code>yarn add @pixelmon/mock -D</code></pre><p>\u5728\u6839\u6a21\u5757 <code>AppModule</code> \u5bfc\u5165 <a href="/mock/rule" data-url="/mock/rule">Mock \u89c4\u5219\u6570\u636e</a>\u548c <code>PixelmonMockModule</code>\uff1b</p><pre class="hljs language-ts"><code>import { PixelmonMockModule } from \'@pixelmon/mock\';\nimport * as MOCKDATA from \'../../_mock\';\n// \u53ea\u5bf9\u5f00\u53d1\u73af\u5883\u6709\u6548\nimport { environment } from \'../environments/environment\';\nconst MOCKMODULE = !environment.production ? [ PixelmonMockModule.forRoot({ data: MOCKDATA }) ] : [];\n\n@NgModule({\n  imports: [\n    ...MOCKMODULE\n  ]\n})</code></pre><h3 id="MockOptions-\u914d\u7f6e">MockOptions \u914d\u7f6e<a onclick="window.location.hash = \'MockOptions-\u914d\u7f6e\'" class="anchor">#</a></h3><p><code>forRoot</code> \u53c2\u6570\u8fd8\u5305\u62ec\uff1a</p><table><thead><tr><th>\u53c2\u6570\u540d</th><th>\u7c7b\u578b</th><th>\u9ed8\u8ba4\u503c</th><th>\u63cf\u8ff0</th></tr></thead><tbody><tr><td><code>[data]</code></td><td><code>any</code></td><td>-</td><td>Mock \u6570\u636e\u89c4\u5219</td></tr><tr><td><code>[delay]</code></td><td><code>number</code></td><td><code>300</code></td><td>\u8bf7\u6c42\u5ef6\u8fdf\uff0c\u5355\u4f4d\uff1a\u6beb\u79d2</td></tr><tr><td><code>[force]</code></td><td><code>boolean</code></td><td><code>false</code></td><td>\u662f\u5426\u5f3a\u5236\u6240\u6709\u8bf7\u6c42\u90fd Mock\uff0c<code>true</code> \u8868\u793a\u5f53\u8bf7\u6c42\u7684 URL \u4e0d\u5b58\u5728\u65f6\u76f4\u63a5\u8fd4\u56de 404 \u9519\u8bef\uff0c<code>false</code> \u8868\u793a\u672a\u547d\u4e2d\u65f6\u53d1\u9001\u771f\u5b9e HTTP \u8bf7\u6c42</td></tr><tr><td><code>[log]</code></td><td><code>boolean</code></td><td><code>true</code></td><td>\u662f\u5426\u6253\u5370 Mock \u8bf7\u6c42\u4fe1\u606f\uff0c\u5f25\u8865\u6d4f\u89c8\u5668\u65e0 Network \u4fe1\u606f\uff1b\u5f53\u8bf7\u6c42\u7ecf\u8fc7 Mock \u4f1a\u63a5\u6536\u3010\ud83d\udc7dMock\u3011</td></tr><tr><td><code>[executeOtherInterceptors]</code></td><td><code>boolean</code></td><td><code>true</code></td><td>\u662f\u5426\u62e6\u622a\u547d\u4e2d\u540e\u7ee7\u7eed\u8c03\u7528\u540e\u7eed\u62e6\u622a\u5668\u7684 <code>intercept</code> \u65b9\u6cd5</td></tr></tbody></table><blockquote><p>\u82e5<strong>\u61d2\u6a21\u5757</strong>\u8fd8\u9700\u8981\u5bfc\u5165 <code>forChild</code> \u786e\u4fdd HTTP \u62e6\u622a\u5668\u6709\u6548\uff0c\u4e00\u822c\u53ef\u4ee5\u76f4\u63a5\u5728 SharedModule \u76f4\u63a5\u4f7f\u7528 <code>forChild</code>\u3002</p></blockquote><h3 id="\u4e3a\u4ec0\u4e48\u53ea\u5bf9\u5f00\u53d1\u73af\u5883\u6709\u6548\uff1f">\u4e3a\u4ec0\u4e48\u53ea\u5bf9\u5f00\u53d1\u73af\u5883\u6709\u6548\uff1f<a onclick="window.location.hash = \'\u4e3a\u4ec0\u4e48\u53ea\u5bf9\u5f00\u53d1\u73af\u5883\u6709\u6548\uff1f\'" class="anchor">#</a></h3><p>Mock \u5e76\u975e\u662f\u771f\u5b9e\u6570\u636e\uff0c\u5927\u90e8\u5206\u573a\u666f\u662f\u9488\u5bf9\u5f00\u53d1\u672c\u5730\u6216\u6d4b\u8bd5\u73af\u5883\uff1b\u6240\u4ee5\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4e0d\u5e94\u8be5\u5305\u62ec Mock \u6a21\u5757\u4ee5\u53ca\u89c4\u5219\u6570\u636e\u3002\u56e0\u6b64\u4e0a\u8ff0\u624d\u4f1a\u6839\u636e <code>!environment.production</code> \u4f9d\u636e\u73af\u5883\u6765\u51b3\u5b9a\u662f\u5426\u52a0\u8f7d <code>PixelmonMockModule</code>\u3002</p><p>\u5f53\u7136\uff0c\u4f60\u4f9d\u7136\u53ef\u4ee5\u5728\u751f\u4ea7\u73af\u5883\u4e5f\u4f7f\u7528\u8fd9\u79cd\u89c4\u5219\uff0c\u5c31\u50cf //1ziton.github.io/pixelmon/ \u4e00\u6837\uff0c\u9700\u8981\u4e00\u4e9b\u6a21\u62df\u8bf7\u6c42\u6765\u4fdd\u8bc1\u73af\u5883\u7684\u8fd0\u884c\u3002</p><pre class="hljs language-ts"><code>import { PixelmonMockModule } from \'@pixelmon/mock\';\nimport * as MOCKDATA from \'../../_mock\';\n@NgModule({\n  imports: [\n    PixelmonMockModule.forRoot({ data: MOCKDATA })\n  ]\n})</code></pre></article></section>',meta:{order:1,title:"\u5f00\u59cb\u4f7f\u7528",type:"Documents"},toc:[{id:"\u5199\u5728\u524d\u9762",title:"\u5199\u5728\u524d\u9762",h:2},{id:"\u5982\u4f55\u4f7f\u7528",title:"\u5982\u4f55\u4f7f\u7528",h:2},{id:"MockOptions-\u914d\u7f6e",title:"MockOptions \u914d\u7f6e",h:3},{id:"\u4e3a\u4ec0\u4e48\u53ea\u5bf9\u5f00\u53d1\u73af\u5883\u6709\u6548\uff1f",title:"\u4e3a\u4ec0\u4e48\u53ea\u5bf9\u5f00\u53d1\u73af\u5883\u6709\u6548\uff1f",h:3}]}},demo:!1},this.codes=[]},n=function(){this.item={cols:1,urls:{"en-US":"packages/mock/docs/rule.en-US.md","zh-CN":"packages/mock/docs/rule.zh-CN.md"},content:{"en-US":{content:"<section class=\"markdown\"><article><h2 id=\"Foreword\">Foreword<a onclick=\"window.location.hash = 'Foreword'\" class=\"anchor\">#</a></h2><p>The Mock rule data is an <code>Object</code> object, Key is request declaration, and Value is response data, for example:</p><pre class=\"hljs language-ts\"><code>export const USERS = {\n  'GET /users': { users: [1, 2], total: 2 },\n};</code></pre><p>When send requesting <code>/users</code> via <code>HttpClient</code>, it will directly response <code>{ users: [1, 2], total: 2 }</code>, and will not send any HTTP requests in <code>Network</code> panel.</p><h2 id=\"Key\">Key<a onclick=\"window.location.hash = 'Key'\" class=\"anchor\">#</a></h2><p>Use <code>' '</code>space to separate the request method and URL, the request method can be ignored, the default is <code>GET</code>; the URL supports routing parameters and regular expressions. E.g:</p><pre class=\"hljs language-ts\"><code>export const USERS = {\n  'GET /users': null,\n  // GET: can be ingored\n  '/users/1': null,\n  // POST\n  'POST /users/1': null,\n  // Routing parameters\n  '/users/:id': null,\n  // Regular expressions need to be wrapped with `()`\n  '/data/(.*)': null,\n};</code></pre><h2 id=\"Value\">Value<a onclick=\"window.location.hash = 'Value'\" class=\"anchor\">#</a></h2><p>Supports three types: <code>Object</code>, <code>Array</code>, <code>(req: MockRequest) => any</code>.</p><pre class=\"hljs language-ts\"><code>import { MockStatusError } from '@pixelmon/mock';\n\nexport const USERS = {\n  // Array\n  '/users': [{ uid: 1 }, { uid: 2 }],\n  // Object\n  '/users': { uid: 1 },\n  // Function\n  '/qs': (req: MockRequest) => req.queryString.pi,\n  // Support HttpResponse\n  '/http': (req: MockRequest) => new HttpResponse({ body: 'Body', headers: new HttpHeaders({ token: '1' }) }),\n  // Send Status Error\n  '/404': () => {\n    throw new MockStatusError(404);\n  },\n};</code></pre><h3 id=\"MockRequest\">MockRequest<a onclick=\"window.location.hash = 'MockRequest'\" class=\"anchor\">#</a></h3><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>[params]</code></td><td><code>any</code></td><td>Routing parameter, <code>/:id</code> then <code>params.id</code></td></tr><tr><td><code>[queryString]</code></td><td><code>any</code></td><td>URL parameter, <code>/users?pi=1&ps=10</code> then <code>queryString.pi</code>, <code>queryString.ps</code></td></tr><tr><td><code>[headers]</code></td><td><code>any</code></td><td>Headers</td></tr><tr><td><code>[body]</code></td><td><code>any</code></td><td>Body</td></tr><tr><td><code>[original]</code></td><td><code>HttpRequest&lt;any></code></td><td><code>HttpRequest</code></td></tr></tbody></table><h3 id=\"MockStatusError\">MockStatusError<a onclick=\"window.location.hash = 'MockStatusError'\" class=\"anchor\">#</a></h3><p>When you want to respond to a <code>404</code> http status.</p><h2 id=\"Demo\">Demo<a onclick=\"window.location.hash = 'Demo'\" class=\"anchor\">#</a></h2><pre class=\"hljs language-ts\"><code>import { MockStatusError } from '@pixelmon/mock';\n\nexport const USERS = {\n  // Support object or array values\n  'GET /users': { users: [1, 2], total: 2 },\n  // GET: can be ingored\n  '/users/1': { users: [1, 2], total: 2 },\n  // POST\n  'POST /users/1': { uid: 1 },\n  // Get request parameters: queryString\u3001headers\u3001body\n  '/qs': (req: MockRequest) => req.queryString.pi,\n  // Routing parameters\n  '/users/:id': (req: MockRequest) => req.params, // /users/100, output: { id: 100 }\n  // Send Status Error\n  '/404': () => {\n    throw new MockStatusError(404);\n  },\n  // Regular expressions need to be wrapped with `()`\n  '/data/(.*)': (req: MockRequest) => req,\n};</code></pre><h2 id=\"Storage-rule\">Storage rule<a onclick=\"window.location.hash = 'Storage-rule'\" class=\"anchor\">#</a></h2><p>In general, Mock is required during development, so recommended to create <code>_mock</code> directory in the project root directory and create <code>index.ts</code> file to export all data rules. See <a target=\"_blank\" href=\"https://github.com/1ziton/pixelmon/tree/master/_mock\" data-url=\"https://github.com/1ziton/pixelmon/tree/master/_mock\">pixelmon/_mock</a>.</p></article></section>",meta:{order:2,title:"Rule Data",type:"Documents"},toc:[{id:"Foreword",title:"Foreword",h:2},{id:"Key",title:"Key",h:2},{id:"Value",title:"Value",h:2},{id:"MockRequest",title:"MockRequest",h:3},{id:"MockStatusError",title:"MockStatusError",h:3},{id:"Demo",title:"Demo",h:2},{id:"Storage-rule",title:"Storage rule",h:2}]},"zh-CN":{content:"<section class=\"markdown\"><article><h2 id=\"\u5199\u5728\u524d\u9762\">\u5199\u5728\u524d\u9762<a onclick=\"window.location.hash = '\u5199\u5728\u524d\u9762'\" class=\"anchor\">#</a></h2><p>Mock \u89c4\u5219\u6570\u636e\u662f\u4e00\u4e2a <code>Object</code> \u5bf9\u8c61\uff0cKey \u4e3a\u8bf7\u6c42\u57df\u58f0\u660e\uff0cValue \u4e3a\u54cd\u5e94\u5185\u5bb9\uff0c\u4f8b\u5982\uff1a</p><pre class=\"hljs language-ts\"><code>export const USERS = {\n  'GET /users': { users: [1, 2], total: 2 },\n};</code></pre><p>\u8868\u793a\u5f53\u901a\u8fc7 <code>HttpClient.get('/users')</code> \u8bbf\u95ee\u65f6\uff0c\u4f1a\u76f4\u63a5\u8fd4\u56de <code>{ users: [1, 2], total: 2 }</code>\uff0c\u5e76\u4e14\u4e0d\u4f1a\u53d1\u9001\u4efb\u4f55 HTTP \u8bf7\u6c42\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 <code>Network</code> \u9762\u677f\u6765\u786e\u8ba4\u3002</p><h2 id=\"Key-\u8bf7\u6c42\u57df\u58f0\u660e\">Key \u8bf7\u6c42\u57df\u58f0\u660e<a onclick=\"window.location.hash = 'Key-\u8bf7\u6c42\u57df\u58f0\u660e'\" class=\"anchor\">#</a></h2><p>\u4f7f\u7528 <code>' '</code> \u7a7a\u683c\u6765\u533a\u9694\u8bf7\u6c42\u65b9\u6cd5\u548c URL\uff0c\u8bf7\u6c42\u65b9\u6cd5\u53ef\u5ffd\u7565\uff0c\u9ed8\u8ba4\u4e3a <code>GET</code>\uff1bURL \u652f\u6301\u8def\u7531\u53c2\u6570\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u4e00\u4e9b\u6709\u6548\u7684 Key\uff1a</p><pre class=\"hljs language-ts\"><code>export const USERS = {\n  'GET /users': null,\n  // GET \u53ef\u7701\u7565\n  '/users/1': null,\n  // POST \u8bf7\u6c42\n  'POST /users/1': null,\n  // \u8def\u7531\u53c2\u6570\n  '/users/:id': null,\n  // \u6b63\u5219\u8868\u8fbe\u5f0f\u9700\u8981\u7528 `()` \u5305\u88f9\n  '/data/(.*)': null,\n};</code></pre><h2 id=\"Value-\u54cd\u5e94\u5185\u5bb9\">Value \u54cd\u5e94\u5185\u5bb9<a onclick=\"window.location.hash = 'Value-\u54cd\u5e94\u5185\u5bb9'\" class=\"anchor\">#</a></h2><p>\u54cd\u5e94\u5185\u5bb9\u652f\u6301\u4e09\u79cd\u7c7b\u578b\uff1a<code>Object</code>\u3001<code>Array</code>\u3001<code>(req: MockRequest) => any</code>\u3002</p><pre class=\"hljs language-ts\"><code>import { MockStatusError } from '@pixelmon/mock';\n\nexport const USERS = {\n  // Array\n  '/users': [{ uid: 1 }, { uid: 2 }],\n  // Object\n  '/users': { uid: 1 },\n  // Function\n  '/qs': (req: MockRequest) => req.queryString.pi,\n  // \u652f\u6301\u8fd4\u56de\u5b8c\u6574\u7684 HttpResponse\n  '/http': (req: MockRequest) => new HttpResponse({ body: 'Body', headers: new HttpHeaders({ token: '1' }) }),\n  // \u53d1\u9001 Status \u9519\u8bef\n  '/404': () => {\n    throw new MockStatusError(404);\n  },\n};</code></pre><h3 id=\"MockRequest\">MockRequest<a onclick=\"window.location.hash = 'MockRequest'\" class=\"anchor\">#</a></h3><table><thead><tr><th>\u540d\u79f0</th><th>\u7c7b\u578b</th><th>\u63cf\u8ff0</th></tr></thead><tbody><tr><td><code>[params]</code></td><td><code>any</code></td><td>\u8def\u7531\u53c2\u6570\uff0c<code>/:id</code> \u5219 <code>params.id</code></td></tr><tr><td><code>[queryString]</code></td><td><code>any</code></td><td>URL \u53c2\u6570\uff0c<code>/users?pi=1&ps=10</code> \u5219 <code>queryString.pi</code>\u3001<code>queryString.ps</code></td></tr><tr><td><code>[headers]</code></td><td><code>any</code></td><td>Headers \u503c</td></tr><tr><td><code>[body]</code></td><td><code>any</code></td><td>\u8bf7\u6c42 body</td></tr><tr><td><code>[original]</code></td><td><code>HttpRequest&lt;any></code></td><td>\u539f\u59cb <code>HttpRequest</code></td></tr></tbody></table><h3 id=\"MockStatusError\">MockStatusError<a onclick=\"window.location.hash = 'MockStatusError'\" class=\"anchor\">#</a></h3><p>\u5f53\u4f60\u5e0c\u671b\u54cd\u5e94\u4e00\u4e2a <code>404</code> \u5f02\u5e38\u65f6\u3002</p><h2 id=\"\u4e00\u4e9b\u793a\u4f8b\">\u4e00\u4e9b\u793a\u4f8b<a onclick=\"window.location.hash = '\u4e00\u4e9b\u793a\u4f8b'\" class=\"anchor\">#</a></h2><pre class=\"hljs language-ts\"><code>import { MockStatusError } from '@pixelmon/mock';\n\nexport const USERS = {\n  // \u652f\u6301\u503c\u4e3a Object \u548c Array\n  'GET /users': { users: [1, 2], total: 2 },\n  // GET \u53ef\u7701\u7565\n  '/users/1': { users: [1, 2], total: 2 },\n  // POST \u8bf7\u6c42\n  'POST /users/1': { uid: 1 },\n  // \u83b7\u53d6\u8bf7\u6c42\u53c2\u6570 queryString\u3001headers\u3001body\n  '/qs': (req: MockRequest) => req.queryString.pi,\n  // \u8def\u7531\u53c2\u6570\n  '/users/:id': (req: MockRequest) => req.params, // /users/100, output: { id: 100 }\n  // \u53d1\u9001 Status \u9519\u8bef\n  '/404': () => {\n    throw new MockStatusError(404);\n  },\n  // \u4f7f\u7528 () \u8868\u793a\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\n  '/data/(.*)': (req: MockRequest) => req,\n};</code></pre><h2 id=\"\u5b58\u50a8\u89c4\u5219\">\u5b58\u50a8\u89c4\u5219<a onclick=\"window.location.hash = '\u5b58\u50a8\u89c4\u5219'\" class=\"anchor\">#</a></h2><p>\u4e00\u822c\u6765\u8bf4 Mock \u90fd\u662f\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u9700\u8981\uff0c\u56e0\u6b64\u5efa\u8bae\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a <code>_mock</code> \u76ee\u5f55\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a <code>index.ts</code> \u6587\u4ef6\u7528\u4e8e\u5bfc\u51fa\u6240\u6709\u6570\u636e\u89c4\u5219\uff0c\u53c2\u8003 <a target=\"_blank\" href=\"https://github.com/1ziton/pixelmon/tree/master/_mock\" data-url=\"https://github.com/1ziton/pixelmon/tree/master/_mock\">pixelmon/_mock</a>\u3002</p></article></section>",meta:{order:2,title:"\u89c4\u5219\u6570\u636e",type:"Documents"},toc:[{id:"\u5199\u5728\u524d\u9762",title:"\u5199\u5728\u524d\u9762",h:2},{id:"Key-\u8bf7\u6c42\u57df\u58f0\u660e",title:"Key \u8bf7\u6c42\u57df\u58f0\u660e",h:2},{id:"Value-\u54cd\u5e94\u5185\u5bb9",title:"Value \u54cd\u5e94\u5185\u5bb9",h:2},{id:"MockRequest",title:"MockRequest",h:3},{id:"MockStatusError",title:"MockStatusError",h:3},{id:"\u4e00\u4e9b\u793a\u4f8b",title:"\u4e00\u4e9b\u793a\u4f8b",h:2},{id:"\u5b58\u50a8\u89c4\u5219",title:"\u5b58\u50a8\u89c4\u5219",h:2}]}},demo:!1},this.codes=[]},r=function(){},s=t("pMnS"),l=t("EdU/"),i=t("/Yna"),u=t("JRKe"),b=t("Ed4d"),p=t("8WaK"),h=t("QfCi"),m=t("CghO"),H=t("Sq/J"),k=t("mHlG"),g=t("9BMt"),M=t("kRch"),w=t("QkPN"),y=t("vBNu"),S=t("Z7t+"),q=t("II6v"),f=t("MRB6"),R=t("uU7u"),x=t("iInd"),T=t("cUpR"),E=a.vb({encapsulation:0,styles:["[_nghost-%COMP%] { display: block }"],data:{}});function O(e){return a.Tb(0,[(e()(),a.xb(0,0,null,null,1,"app-docs",[],null,null,null,S.b,S.a)),a.wb(1,245760,null,0,q.a,[f.a,R.a,x.o,T.b],{codes:[0,"codes"],item:[1,"item"]},null)],function(e,o){var t=o.component;e(o,1,0,t.codes,t.item)},null)}var j=a.tb("app-mock-getting-started",c,function(e){return a.Tb(0,[(e()(),a.xb(0,0,null,null,1,"app-mock-getting-started",[],null,null,null,O,E)),a.wb(1,49152,null,0,c,[],null,null)],null,null)},{},{},[]),z=a.vb({encapsulation:0,styles:["[_nghost-%COMP%] { display: block }"],data:{}});function U(e){return a.Tb(0,[(e()(),a.xb(0,0,null,null,1,"app-docs",[],null,null,null,S.b,S.a)),a.wb(1,245760,null,0,q.a,[f.a,R.a,x.o,T.b],{codes:[0,"codes"],item:[1,"item"]},null)],function(e,o){var t=o.component;e(o,1,0,t.codes,t.item)},null)}var P=a.tb("app-mock-rule",n,function(e){return a.Tb(0,[(e()(),a.xb(0,0,null,null,1,"app-mock-rule",[],null,null,null,U,z)),a.wb(1,49152,null,0,n,[],null,null)],null,null)},{},{},[]),v=t("SVse"),C=t("s7LF"),A=t("5VGP"),D=t("QQfA"),K=t("IP0z"),N=t("POq0"),F=t("sAdM"),G=t("ekcc"),V=t("g+Fz"),I=t("Ybye"),L=t("NFMk"),_=t("10Ig"),B=t("iC8E"),Y=t("/HVE"),J=t("v1Dh"),Z=t("66zS"),Q=t("5Izy"),W=t("yTpB"),X=t("zMNK"),$=t("hOhj"),ee=t("r19J"),oe=t("anqq"),te=t("IYs4"),ae=t("EcpC"),de=t("GaVp"),ce=t("/L1H"),ne=t("phDe"),re=t("rJp6"),se=t("Rgb0"),le=t("kS4m"),ie=t("mW00"),ue=t("jTf7"),be=t("WPSl"),pe=t("YdS3"),he=t("wQFA"),me=t("px0D"),He=t("3ZFI"),ke=t("CYS+"),ge=t("oBm0"),Me=t("A7zk"),we=t("YRt3"),ye=t("lAiz"),Se=t("ce6n"),qe=t("SBNi"),fe=t("7QIX"),Re=t("tYkK"),xe=t("wf2+"),Te=t("eCGT"),Ee=t("nHXS"),Oe=t("fb/r"),je=t("zTFG"),ze=t("JK0T"),Ue=t("JXeA"),Pe=t("0CZq"),ve=t("qU0y"),Ce=t("vZsH"),Ae=t("W4B1"),De=t("SHEi"),Ke=t("FPpa"),Ne=t("RVNi"),Fe=t("NDed"),Ge=t("5A4h"),Ve=t("N2O2"),Ie=t("ozKM"),Le=t("OvZZ"),_e=t("z+yo"),Be=t("DQmg"),Ye=t("haRT"),Je=t("1+nf"),Ze=t("XFzh"),Qe=t("p+Sl"),We=t("HhpN"),Xe=t("SN7N"),$e=t("fwnu"),eo=t("VbP7"),oo=t("gaRz"),to=t("e15G"),ao=t("y+Ew"),co=t("cZe8"),no=t("RU17"),ro=t("+YBk"),so=t("9J0+"),lo=t("tFO0"),io=t("+Lgp"),uo=t("vIiB"),bo=t("kB3X"),po=t("CVg0"),ho=t("oEQ7"),mo=t("AIZb"),Ho=t("XeAm"),ko=t("0r5P"),go=t("VE6v"),Mo=t("PGh0"),wo=t("rQ3v"),yo=t("0JZw"),So=t("MR+B"),qo=t("tZY3"),fo=t("QQcO"),Ro=t("Xoul"),xo=t("RCZh"),To=t("LBQj"),Eo=t("NnDh"),Oo=t("HZuH"),jo=t("GgO0"),zo=t("vrge"),Uo=t("nMAq"),Po=t("5PV9"),vo=t("nIn3"),Co=t("xo13"),Ao=t("CnVV"),Do=t("5p8d"),Ko=t("qYUw"),No=t("JpOc"),Fo=t("VRoF"),Go=t("Uto7"),Vo=t("/p+U"),Io=t("ye40"),Lo=t("qcxY"),_o=t("T+Em"),Bo=t("ucmY"),Yo=t("76lH"),Jo=t("TSSN"),Zo=t("Fg/6"),Qo=t("kzz5"),Wo=t("SqF5"),Xo=t("Wl7g"),$o=t("+TYD"),et=t("PCNd");t.d(o,"MockModuleNgFactory",function(){return ot});var ot=a.ub(r,[],function(e){return a.Gb([a.Hb(512,a.j,a.eb,[[8,[s.a,l.a,l.b,i.a,u.a,b.a,p.a,h.a,m.a,H.a,k.a,g.a,M.a,w.a,y.a,j,P]],[3,a.j],a.x]),a.Hb(4608,v.o,v.n,[a.u,[2,v.J]]),a.Hb(4608,C.w,C.w,[]),a.Hb(4608,C.e,C.e,[]),a.Hb(5120,A.y,A.L,[v.d,[3,A.y]]),a.Hb(4608,D.d,D.d,[D.k,D.f,a.j,D.i,D.g,a.r,a.z,v.d,K.b,[2,v.i]]),a.Hb(5120,D.l,D.m,[D.d]),a.Hb(4608,N.c,N.c,[]),a.Hb(5120,F.b,F.a,[[3,F.b],G.a]),a.Hb(4608,V.c,V.c,[v.d]),a.Hb(4608,I.a,I.a,[L.g]),a.Hb(4608,_.a,_.a,[B.d]),a.Hb(1073742336,v.b,v.b,[]),a.Hb(1073742336,C.v,C.v,[]),a.Hb(1073742336,C.j,C.j,[]),a.Hb(1073742336,x.s,x.s,[[2,x.x],[2,x.o]]),a.Hb(1073742336,C.s,C.s,[]),a.Hb(1073742336,Y.b,Y.b,[]),a.Hb(1073742336,J.b,J.b,[]),a.Hb(1073742336,Z.c,Z.c,[]),a.Hb(1073742336,A.j,A.j,[]),a.Hb(1073742336,Q.b,Q.b,[]),a.Hb(1073742336,W.a,W.a,[]),a.Hb(1073742336,K.a,K.a,[]),a.Hb(1073742336,X.e,X.e,[]),a.Hb(1073742336,$.g,$.g,[]),a.Hb(1073742336,D.h,D.h,[]),a.Hb(1073742336,A.v,A.v,[]),a.Hb(1073742336,ee.a,ee.a,[]),a.Hb(1073742336,oe.b,oe.b,[]),a.Hb(1073742336,te.b,te.b,[]),a.Hb(1073742336,N.d,N.d,[]),a.Hb(1073742336,ae.b,ae.b,[]),a.Hb(1073742336,A.I,A.I,[]),a.Hb(1073742336,de.c,de.c,[]),a.Hb(1073742336,A.w,A.w,[]),a.Hb(1073742336,ce.e,ce.e,[]),a.Hb(1073742336,ne.h,ne.h,[]),a.Hb(1073742336,ne.a,ne.a,[]),a.Hb(1073742336,ne.e,ne.e,[]),a.Hb(1073742336,re.c,re.c,[]),a.Hb(1073742336,se.b,se.b,[]),a.Hb(1073742336,le.d,le.d,[]),a.Hb(1073742336,ie.c,ie.c,[]),a.Hb(1073742336,ue.h,ue.h,[]),a.Hb(1073742336,be.f,be.f,[]),a.Hb(1073742336,pe.d,pe.d,[]),a.Hb(1073742336,he.a,he.a,[]),a.Hb(1073742336,A.r,A.r,[]),a.Hb(1073742336,me.d,me.d,[]),a.Hb(1073742336,He.a,He.a,[]),a.Hb(1073742336,ke.c,ke.c,[]),a.Hb(1073742336,ge.a,ge.a,[]),a.Hb(1073742336,Me.a,Me.a,[]),a.Hb(1073742336,we.b,we.b,[]),a.Hb(1073742336,ye.g,ye.g,[]),a.Hb(1073742336,ye.b,ye.b,[]),a.Hb(1073742336,Se.a,Se.a,[]),a.Hb(1073742336,qe.b,qe.b,[]),a.Hb(1073742336,B.e,B.e,[]),a.Hb(1073742336,B.b,B.b,[]),a.Hb(1073742336,fe.b,fe.b,[]),a.Hb(1073742336,Re.b,Re.b,[]),a.Hb(1073742336,xe.g,xe.g,[]),a.Hb(1073742336,Te.a,Te.a,[]),a.Hb(1073742336,Ee.a,Ee.a,[]),a.Hb(1073742336,Oe.b,Oe.b,[]),a.Hb(1073742336,je.d,je.d,[]),a.Hb(1073742336,ze.a,ze.a,[]),a.Hb(1073742336,Ue.h,Ue.h,[]),a.Hb(1073742336,Ue.f,Ue.f,[]),a.Hb(1073742336,A.x,A.x,[]),a.Hb(1073742336,L.h,L.h,[]),a.Hb(1073742336,L.d,L.d,[]),a.Hb(1073742336,L.e,L.e,[]),a.Hb(1073742336,Pe.f,Pe.f,[]),a.Hb(1073742336,Pe.e,Pe.e,[]),a.Hb(1073742336,ve.a,ve.a,[]),a.Hb(1073742336,Ce.b,Ce.b,[]),a.Hb(1073742336,Ae.b,Ae.b,[]),a.Hb(1073742336,De.b,De.b,[]),a.Hb(1073742336,Ke.c,Ke.c,[]),a.Hb(1073742336,Ne.b,Ne.b,[]),a.Hb(1073742336,Fe.a,Fe.a,[]),a.Hb(1073742336,Ge.a,Ge.a,[]),a.Hb(1073742336,Ve.b,Ve.b,[]),a.Hb(1073742336,Ie.a,Ie.a,[]),a.Hb(1073742336,Le.a,Le.a,[]),a.Hb(1073742336,_e.a,_e.a,[]),a.Hb(1073742336,Be.b,Be.b,[]),a.Hb(1073742336,Ye.b,Ye.b,[]),a.Hb(1073742336,Je.f,Je.f,[]),a.Hb(1073742336,Ze.b,Ze.b,[]),a.Hb(1073742336,Qe.a,Qe.a,[]),a.Hb(1073742336,A.C,A.C,[]),a.Hb(1073742336,We.a,We.a,[]),a.Hb(1073742336,Xe.b,Xe.b,[]),a.Hb(1073742336,$e.b,$e.b,[]),a.Hb(1073742336,A.o,A.o,[]),a.Hb(1073742336,eo.a,eo.a,[]),a.Hb(1073742336,oo.d,oo.d,[]),a.Hb(1073742336,to.a,to.a,[]),a.Hb(1073742336,ao.b,ao.b,[]),a.Hb(1073742336,co.b,co.b,[]),a.Hb(1073742336,no.b,no.b,[]),a.Hb(1073742336,ro.a,ro.a,[]),a.Hb(1073742336,so.a,so.a,[Z.d]),a.Hb(1073742336,lo.a,lo.a,[]),a.Hb(1073742336,io.a,io.a,[]),a.Hb(1073742336,uo.a,uo.a,[]),a.Hb(1073742336,bo.a,bo.a,[]),a.Hb(1073742336,po.a,po.a,[]),a.Hb(1073742336,ho.a,ho.a,[]),a.Hb(1073742336,mo.a,mo.a,[]),a.Hb(1073742336,Ho.a,Ho.a,[]),a.Hb(1073742336,ko.a,ko.a,[]),a.Hb(1073742336,go.a,go.a,[]),a.Hb(1073742336,Mo.a,Mo.a,[]),a.Hb(1073742336,wo.a,wo.a,[]),a.Hb(1073742336,yo.a,yo.a,[]),a.Hb(1073742336,So.a,So.a,[]),a.Hb(1073742336,qo.a,qo.a,[]),a.Hb(1073742336,fo.a,fo.a,[]),a.Hb(1073742336,Ro.a,Ro.a,[]),a.Hb(1073742336,xo.b,xo.b,[]),a.Hb(1073742336,To.a,To.a,[]),a.Hb(1073742336,Eo.a,Eo.a,[]),a.Hb(1073742336,Oo.a,Oo.a,[]),a.Hb(1073742336,jo.a,jo.a,[]),a.Hb(1073742336,zo.a,zo.a,[]),a.Hb(1073742336,Uo.a,Uo.a,[]),a.Hb(1073742336,Po.a,Po.a,[]),a.Hb(1073742336,vo.a,vo.a,[]),a.Hb(1073742336,Co.a,Co.a,[]),a.Hb(1073742336,Ao.a,Ao.a,[]),a.Hb(1073742336,Do.a,Do.a,[]),a.Hb(1073742336,Ko.a,Ko.a,[]),a.Hb(1073742336,No.a,No.a,[]),a.Hb(1073742336,Fo.a,Fo.a,[]),a.Hb(1073742336,Go.a,Go.a,[]),a.Hb(1073742336,Vo.a,Vo.a,[]),a.Hb(1073742336,Io.a,Io.a,[]),a.Hb(1073742336,Lo.a,Lo.a,[]),a.Hb(1073742336,_o.a,_o.a,[]),a.Hb(1073742336,Bo.a,Bo.a,[]),a.Hb(1073742336,Yo.a,Yo.a,[]),a.Hb(1073742336,Jo.h,Jo.h,[]),a.Hb(1073742336,Zo.a,Zo.a,[]),a.Hb(1073742336,Qo.a,Qo.a,[]),a.Hb(1073742336,V.b,V.b,[]),a.Hb(1073742336,Wo.b,Wo.b,[]),a.Hb(1073742336,Xo.d,Xo.d,[]),a.Hb(1073742336,Xo.h,Xo.h,[]),a.Hb(1073742336,Xo.b,Xo.b,[]),a.Hb(1073742336,Xo.j,Xo.j,[]),a.Hb(1073742336,Xo.l,Xo.l,[]),a.Hb(1073742336,Xo.p,Xo.p,[]),a.Hb(1073742336,Xo.t,Xo.t,[]),a.Hb(1073742336,$o.a,$o.a,[]),a.Hb(1073742336,et.a,et.a,[]),a.Hb(1073742336,r,r,[]),a.Hb(256,Ue.b,{nzAnimate:!0,nzDuration:3e3,nzMaxStack:7,nzPauseOnHover:!0,nzTop:24},[]),a.Hb(256,Pe.b,{nzTop:"24px",nzBottom:"24px",nzPlacement:"topRight",nzDuration:4500,nzMaxStack:7,nzPauseOnHover:!0,nzAnimate:!0},[]),a.Hb(256,G.a,ro.b,[]),a.Hb(256,Z.a,Eo.b,[]),a.Hb(1024,x.m,function(){return[[{path:"",component:d.a,children:[{path:"",redirectTo:"getting-started/zh",pathMatch:"full"},{path:"getting-started",redirectTo:"getting-started/zh",pathMatch:"full"},{path:"getting-started/:lang",component:c},{path:"rule",redirectTo:"rule/zh",pathMatch:"full"},{path:"rule/:lang",component:n}]}]]},[])])})}}]);