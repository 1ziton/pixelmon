(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{z19X:function(t,e,a){"use strict";a.r(e);var o=a("8Y7J"),l=a("0qEG");class d{constructor(){this.item={cols:1,urls:{"en-US":"packages/acl/docs/control.en-US.md","zh-CN":"packages/acl/docs/control.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><h2 id="Foreword">Foreword<a onclick="window.location.hash = \'Foreword\'" class="anchor">#</a></h2><p>Many times you need to control the permissions of a button. <code>@pixelmon/acl</code> provides an <code>acl</code> directive that allows you to control the permissions of a button, table, list, etc.</p><h2 id="Principle">Principle<a onclick="window.location.hash = \'Principle\'" class="anchor">#</a></h2><p><code>[acl]</code> adds a <code>acl__hide</code> style to the target element by default, and hides the unauthorized element with <code>display: none</code>, which is a simple and efficient way.</p><p>The corresponding <code>*aclIf</code> is a structured directive similar to <code>ngIf</code> which does not render the element when it is not authorized. <strong>Note:</strong> In order to keep it simple, it does not support <code>acl-ability</code> permission point configuration.</p><h2 id="DEMO">DEMO<a onclick="window.location.hash = \'DEMO\'" class="anchor">#</a></h2><h3 id="Role">Role<a onclick="window.location.hash = \'Role\'" class="anchor">#</a></h3><p>Displayed when the button must have a user role.</p><pre class="hljs language-html"><code>&lt;button [acl]="\'user\'"&gt;&lt;/button&gt; &lt;button *aclIf="\'user\'"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Displayed when the button must have a user or manage role.&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button [acl]="[\'user\', \'manage\']"&gt;&lt;/button&gt; &lt;button *aclIf="[\'user\', \'manage\']"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Displayed when the button must have a user and manage role.&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button [acl]="{ role: [\'user\', \'manage\'], mode: \'allOf\' }"&gt;&lt;/button&gt; &lt;button *aclIf="{ role: [\'user\', \'manage\'], mode: \'allOf\' }"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Displayed when the input muse have a user role, displayed text when it\'s not authorized.&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;input nz-input *aclIf="\'user\'; else unauthorized" /&gt; &lt;ng-template #unauthorized&gt;{{user}}&lt;/ng-template&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Use &lt;code&gt;except&lt;/code&gt; reverse control to displayed when it\'s not authorized.&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;ng-template [aclIf]="role" except&gt;\n  &lt;input nz-input /&gt;\n&lt;/ng-template&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="Permission"&gt;Permission&lt;a onclick="window.location.hash = \'Permission\'" class="anchor"&gt;#&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Displayed when the button must have a 10 value permisseion.&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button [acl]="10"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In order for the acl instruction to be a role or a permission, so the value of the parameter value is &lt;code&gt;string&lt;/code&gt; which mean the role, &lt;code&gt;number&lt;/code&gt; which mean the permission. Use the &lt;code&gt;acl-ability&lt;/code&gt; parameter if the permission is a string.&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button acl [acl-ability]="\'USER-EDIT\'"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;oneOf&lt;/code&gt; Must be valid against exactly one of the given permission (default).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;allOf&lt;/code&gt; Must be valid against all of the given permission&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Displayed when the button must have a &lt;code&gt;10&lt;/code&gt; and &lt;code&gt;USER-EDIT&lt;/code&gt; permission.&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button [acl]="{ ability: [10, \'USER-EDIT\'], mode: \'allOf\' }"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;String permission&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The check permission is via the &lt;code&gt;can&lt;/code&gt; method, and the &lt;code&gt;PixelmonACLConfig&lt;/code&gt; contains the &lt;code&gt;preCan&lt;/code&gt; method, which can be used to implement a string to distinguish roles or permissions.&lt;/p&gt;&lt;pre class="hljs language-ts"&gt;&lt;code&gt;export function fnPixelmonACLConfig(): PixelmonACLConfig {\n  return {\n    ...new PixelmonACLConfig(),\n    ...({\n      preCan: (roleOrAbility: ACLCanType) =&gt; {\n        const str = roleOrAbility.toString();\n        return str.startsWith(\'ability.\') ? { ability: [str] } : null;\n      },\n    } as PixelmonACLConfig),\n  };\n}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Therefore, passing a string with the beginning of &lt;code&gt;ability.&lt;/code&gt; will be considered a permission point, for example:&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button acl="ability.user.edit"&gt;&lt;/button&gt;</code></pre></section>',api:'<h2 id="API">API<a onclick="window.location.hash = \'API\'" class="anchor">#</a></h2><h3 id="*aclIf">*aclIf<a onclick="window.location.hash = \'*aclIf\'" class="anchor">#</a></h3><table><thead><tr><th>Property</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>[aclIf]</code></td><td><code>can</code> method parameter</td><td><code>ACLCanType</code></td><td>-</td></tr><tr><td><code>[aclIfThen]</code></td><td>Display template when authorized</td><td><code>TemplateRef&lt;void> | null</code></td><td>-</td></tr><tr><td><code>[aclIfElse]</code></td><td>Display template when not authorized</td><td><code>TemplateRef&lt;void> | null</code></td><td>-</td></tr><tr><td><code>[except]</code></td><td>Permissions denied to display</td><td><code>boolean</code></td><td><code>false</code></td></tr></tbody></table>',meta:{order:3,title:"Granular permissions",type:"Documents"},toc:[{id:"Foreword",title:"Foreword",h:2},{id:"Principle",title:"Principle",h:2},{id:"DEMO",title:"DEMO",h:2},{id:"Role",title:"Role",h:3},{id:"Permission",title:"Permission",h:3},{id:"API",title:"API",h:2},{id:"*aclIf",title:"*aclIf",h:3}]},"zh-CN":{content:'<section class="markdown"><h2 id="\u5199\u5728\u524d\u9762">\u5199\u5728\u524d\u9762<a onclick="window.location.hash = \'\u5199\u5728\u524d\u9762\'" class="anchor">#</a></h2><p>\u5f88\u591a\u65f6\u5019\u9700\u8981\u5bf9\u67d0\u4e2a\u6309\u94ae\u8fdb\u884c\u6743\u9650\u63a7\u5236\uff0c<code>@pixelmon/acl</code> \u63d0\u4f9b\u4e00\u4e2a <code>acl</code> \u6307\u4ee4\uff0c\u53ef\u4ee5\u5229\u7528\u89d2\u8272\u6216\u6743\u9650\u70b9\u5bf9\u67d0\u4e2a\u6309\u94ae\u3001\u8868\u683c\u3001\u5217\u8868\u7b49\u5143\u7d20\u8fdb\u884c\u6743\u9650\u63a7\u5236\u3002</p><h2 id="\u539f\u7406">\u539f\u7406<a onclick="window.location.hash = \'\u539f\u7406\'" class="anchor">#</a></h2><p><code>[acl]</code> \u9ed8\u8ba4\u4f1a\u5728\u76ee\u6807\u5143\u7d20\u4e0a\u589e\u52a0\u4e00\u4e2a <code>acl__hide</code> \u6837\u5f0f\uff0c\u5229\u7528 <code>display: none</code> \u6765\u9690\u85cf\u672a\u6388\u6743\u5143\u7d20\uff0c\u5b83\u662f\u4e00\u4e2a\u7b80\u5355\u3001\u53c8\u9ad8\u6548\u7684\u65b9\u5f0f\u3002</p><p>\u4ee5\u6b64\u76f8\u5bf9\u5e94\u7684 <code>*aclIf</code> \u662f\u4e00\u4e2a\u7ed3\u6784\u578b\u6307\u4ee4\uff0c\u5b83\u7c7b\u4f3c <code>ngIf</code> \u5728\u672a\u6388\u6743\u65f6\u4f1a\u4e0d\u6e32\u67d3\u8be5\u5143\u7d20\u3002<strong>\u6ce8\uff1a</strong> \u4e3a\u4e86\u4fdd\u6301\u7b80\u6d01\u5b83\u5e76\u4e0d\u652f\u6301 <code>acl-ability</code> \u6743\u9650\u70b9\u914d\u7f6e\u3002</p><h2 id="\u793a\u4f8b">\u793a\u4f8b<a onclick="window.location.hash = \'\u793a\u4f8b\'" class="anchor">#</a></h2><h3 id="\u89d2\u8272">\u89d2\u8272<a onclick="window.location.hash = \'\u89d2\u8272\'" class="anchor">#</a></h3><p>\u6309\u94ae\u5fc5\u987b\u62e5\u6709 user \u89d2\u8272\u663e\u793a\u3002</p><pre class="hljs language-html"><code>&lt;button [acl]="\'user\'"&gt;&lt;/button&gt; &lt;button *aclIf="\'user\'"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;\u6309\u94ae\u5fc5\u987b\u62e5\u6709 user \u6216 manage \u89d2\u8272\u663e\u793a\u3002&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button [acl]="[\'user\', \'manage\']"&gt;&lt;/button&gt; &lt;button *aclIf="[\'user\', \'manage\']"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;\u6309\u94ae\u5fc5\u987b\u62e5\u6709 user \u548c manage \u89d2\u8272\u663e\u793a\u3002&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button [acl]="{ role: [\'user\', \'manage\'], mode: \'allOf\' }"&gt;&lt;/button&gt; &lt;button *aclIf="{ role: [\'user\', \'manage\'], mode: \'allOf\' }"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;\u5f53\u62e5\u6709 user \u89d2\u8272\u663e\u793a\u6587\u672c\u6846\uff0c\u672a\u6388\u6743\u663e\u793a\u6587\u672c\u3002&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;input nz-input *aclIf="\'user\'; else unauthorized" /&gt; &lt;ng-template #unauthorized&gt;{{user}}&lt;/ng-template&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;\u4f7f\u7528 &lt;code&gt;except&lt;/code&gt; \u53cd\u5411\u63a7\u5236\uff0c\u5f53\u672a\u62e5\u6709 user \u89d2\u8272\u65f6\u663e\u793a\u3002&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;ng-template [aclIf]="role" except&gt;\n  &lt;input nz-input /&gt;\n&lt;/ng-template&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="\u6743\u9650\u70b9"&gt;\u6743\u9650\u70b9&lt;a onclick="window.location.hash = \'\u6743\u9650\u70b9\'" class="anchor"&gt;#&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;\u6309\u94ae\u5fc5\u987b\u62e5\u6709 10 \u6743\u9650\u70b9\u663e\u793a\u3002&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button [acl]="10"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;acl \u6307\u4ee4\u4e3a\u4e86\u80fd\u6240\u4f20\u9012\u7684\u503c\u662f\u89d2\u8272\u8fd8\u662f\u6743\u9650\u70b9\uff0c\u6240\u4ee5\u4ee5 &lt;code&gt;string&lt;/code&gt; \u7c7b\u578b\u8868\u793a\u89d2\u8272\u3001&lt;code&gt;number&lt;/code&gt; \u7c7b\u578b\u8868\u793a\u6743\u9650\u70b9\uff0c\u82e5\u6743\u9650\u70b9\u4e3a\u5b57\u7b26\u4e32\uff0c\u53ef\u4f7f\u7528\u4ee5\u4e0b\u5199\u6cd5\u3002&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button acl [acl-ability]="\'USER-EDIT\'"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;\u4f7f\u7528 &lt;code&gt;mode: \'allOf\'&lt;/code&gt; \u8868\u793a\u5fc5\u987b\u540c\u65f6\u62e5\u6709\u3002&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;oneOf&lt;/code&gt; \u8868\u793a\u53ea\u987b\u6ee1\u8db3\u89d2\u8272\u6216\u6743\u9650\u70b9\u6570\u7ec4\u4e2d\u7684\u4e00\u9879\u7b97\u6709\u6548\uff08\u9ed8\u8ba4\uff09&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;allOf&lt;/code&gt; \u8868\u793a\u5fc5\u987b\u6ee1\u8db3\u6240\u6709\u89d2\u8272\u6216\u6743\u9650\u70b9\u6570\u7ec4\u7b97\u6709\u6548&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;\u6309\u94ae\u5fc5\u987b\u62e5\u6709 &lt;code&gt;10&lt;/code&gt; \u548c &lt;code&gt;USER-EDIT&lt;/code&gt; \u6743\u9650\u70b9\u65f6\u663e\u793a\u3002&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button [acl]="{ ability: [10, \'USER-EDIT\'], mode: \'allOf\' }"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;\u5b57\u7b26\u4e32\u578b\u6743\u9650\u70b9&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;\u68c0\u67e5\u6743\u9650\u662f\u901a\u8fc7 &lt;code&gt;can&lt;/code&gt; \u65b9\u6cd5\uff0c&lt;code&gt;PixelmonACLConfig&lt;/code&gt; \u5305\u542b &lt;code&gt;preCan&lt;/code&gt; \u65b9\u6cd5\uff0c\u53ef\u4ee5\u5229\u7528\u8be5\u65b9\u6cd5\u6765\u5b9e\u73b0\u4e00\u4e2a\u5b57\u7b26\u4e32\u533a\u5206\u89d2\u8272\u6216\u6743\u9650\u70b9\u3002&lt;/p&gt;&lt;pre class="hljs language-ts"&gt;&lt;code&gt;export function fnPixelmonACLConfig(): PixelmonACLConfig {\n  return {\n    ...new PixelmonACLConfig(),\n    ...({\n      preCan: (roleOrAbility: ACLCanType) =&gt; {\n        const str = roleOrAbility.toString();\n        return str.startsWith(\'ability.\') ? { ability: [str] } : null;\n      },\n    } as PixelmonACLConfig),\n  };\n}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;\u56e0\u6b64\uff0c\u5f53\u4f20\u9012\u4e00\u4e2a\u5e26\u6709 &lt;code&gt;ability.&lt;/code&gt; \u5f00\u5934\u7684\u5b57\u7b26\u4e32\u4f1a\u88ab\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u6743\u9650\u70b9\uff0c\u4f8b\u5982\uff1a&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button acl="ability.user.edit"&gt;&lt;/button&gt;</code></pre></section>',api:'<h2 id="API">API<a onclick="window.location.hash = \'API\'" class="anchor">#</a></h2><h3 id="*aclIf">*aclIf<a onclick="window.location.hash = \'*aclIf\'" class="anchor">#</a></h3><table><thead><tr><th>\u53c2\u6570</th><th>\u8bf4\u660e</th><th>\u7c7b\u578b</th><th>\u9ed8\u8ba4\u503c</th></tr></thead><tbody><tr><td><code>[aclIf]</code></td><td><code>can</code> \u65b9\u6cd5\u53c2\u6570\u4f53</td><td><code>ACLCanType</code></td><td>-</td></tr><tr><td><code>[aclIfThen]</code></td><td>\u5df2\u6388\u6743\u65f6\u663e\u793a\u6a21\u677f</td><td><code>TemplateRef&lt;void> | null</code></td><td>-</td></tr><tr><td><code>[aclIfElse]</code></td><td>\u672a\u6388\u6743\u65f6\u663e\u793a\u6a21\u677f</td><td><code>TemplateRef&lt;void> | null</code></td><td>-</td></tr><tr><td><code>[except]</code></td><td>\u672a\u6388\u6743\u65f6\u663e\u793a</td><td><code>boolean</code></td><td><code>false</code></td></tr></tbody></table>',meta:{order:3,title:"\u7c92\u5ea6\u63a7\u5236",type:"Documents"},toc:[{id:"\u5199\u5728\u524d\u9762",title:"\u5199\u5728\u524d\u9762",h:2},{id:"\u539f\u7406",title:"\u539f\u7406",h:2},{id:"\u793a\u4f8b",title:"\u793a\u4f8b",h:2},{id:"\u89d2\u8272",title:"\u89d2\u8272",h:3},{id:"\u6743\u9650\u70b9",title:"\u6743\u9650\u70b9",h:3},{id:"API",title:"API",h:2},{id:"*aclIf",title:"*aclIf",h:3}]}},demo:!1},this.codes=[]}}class n{constructor(){this.item={cols:1,urls:{"en-US":"packages/acl/docs/getting-started.en-US.md","zh-CN":"packages/acl/docs/getting-started.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><p>ACL (Access Control List) is a very simple role-based permission control method, you can use in any Angular projects, a online <a target="_blank" href="//1ziton.github.io/1ziton/#/logics/acl" data-url="//1ziton.github.io/1ziton/#/logics/acl">DEMO</a></p><h2 id="About-ACLService">About ACLService<a onclick="window.location.hash = \'About-ACLService\'" class="anchor">#</a></h2><p>The <code>ACLService</code> service class contains a set of methods based on role permissions. For a better coding experience 1ziton has multiple components or modules that depend on it, such as <code>st</code>, <code>MenuService</code> etc.. So, when you encounter the <code>acl</code> attribute, it means the parameter value of the <a href="#ACLCanType" data-url="#ACLCanType">can</a> method.</p><h2 id="Usage">Usage<a onclick="window.location.hash = \'Usage\'" class="anchor">#</a></h2><p>Install <code>@pixelmon/acl</code>:</p><pre class="hljs language-bash"><code>yarn add @pixelmon/acl</code></pre><p>Import <code>PixelmonACLModule</code> module:</p><pre class="hljs language-typescript"><code>import { PixelmonACLModule } from \'@pixelmon/acl\';\n\n@NgModule({\n  imports: [PixelmonACLModule.forRoot()],\n})\nexport class AppModule {}</code></pre></section>',api:'<h2 id="API">API<a onclick="window.location.hash = \'API\'" class="anchor">#</a></h2><h3 id="PixelmonACLConfig">PixelmonACLConfig<a onclick="window.location.hash = \'PixelmonACLConfig\'" class="anchor">#</a></h3><table><thead><tr><th>Name</th><th>Type</th><th>Summary</th><th>Default</th></tr></thead><tbody><tr><td><code>[guard_url]</code></td><td><code>string</code></td><td>Router URL when guard fail</td><td><code>/403</code></td></tr><tr><td><code>[preCan]</code></td><td><code>(roleOrAbility: <a data-toc="ACLCanType">ACLCanType</a>) => <a data-toc="ACLType">ACLType</a></code></td><td><code>can</code> before execution callback</td><td>-</td></tr></tbody></table><h3 id="ACLService">ACLService<a onclick="window.location.hash = \'ACLService\'" class="anchor">#</a></h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>[change]</code></td><td>Listen for ACL change notifications</td></tr><tr><td><code>[data]</code></td><td>Get all ACL data</td></tr><tr><td><code>setFull(val: boolean)</code></td><td>Whether to super administrator</td></tr><tr><td><code>set(value: <a data-toc="ACLType">ACLType</a>)</code></td><td>Set current user role or permission (automatic override)</td></tr><tr><td><code>setRole(roles: string[])</code></td><td>Set current user role (automatic override)</td></tr><tr><td><code>setAbility(abilities: (number | string)[])</code></td><td>Set current user permission (automatic override)</td></tr><tr><td><code>add(value: <a data-toc="ACLType">ACLType</a>)</code></td><td>Add role or permission to the current user</td></tr><tr><td><code>attachRole(roles: string[])</code></td><td>Attach a role to the current user</td></tr><tr><td><code>attachAbility(abilities: (number | string)[])</code></td><td>Attach a permission to the current user</td></tr><tr><td><code>removeRole(roles: string[])</code></td><td>Remove the role for the current user</td></tr><tr><td><code>removeAbility(abilities: (number | string)[])</code></td><td>Remove the permission for the current user</td></tr><tr><td><code>can(roleOrAbility: <a data-toc="ACLCanType">ACLCanType</a>)</code></td><td>Whether the current user has a role</td></tr><tr><td><code>canAbility(ability: <a data-toc="ACLCanType">ACLCanType</a>)</code></td><td>Whether the current user has a permission</td></tr></tbody></table><h3 id="ACLCanType">ACLCanType<a onclick="window.location.hash = \'ACLCanType\'" class="anchor">#</a></h3><pre class="hljs language-ts"><code>type ACLCanType = number | number[] | string | string[] | ACLType;</code></pre><h3 id="ACLType">ACLType<a onclick="window.location.hash = \'ACLType\'" class="anchor">#</a></h3><table><thead><tr><th>Name</th><th>Type</th><th>Summary</th><th>Default</th></tr></thead><tbody><tr><td><code>[role]</code></td><td><code>string[]</code></td><td>List of role</td><td>-</td></tr><tr><td><code>[ability]</code></td><td><code>number[], string[]</code></td><td>List of permission</td><td>-</td></tr><tr><td><code>[mode]</code></td><td><code>allOf, oneOf</code></td><td><code>allOf</code> Must be valid against all of the given permission.<br><code>oneOf</code> Must be valid against exactly one of the given permission.</td><td><code>oneOf</code></td></tr><tr><td><code>[except]</code></td><td><code>boolean</code></td><td>Whether it\'s except, when the result is <code>true</code>, it means unauthorized</td><td><code>false</code></td></tr></tbody></table>',meta:{order:1,title:"Getting Started",type:"Documents",module:"PixelmonACLModule",config:"PixelmonACLConfig"},toc:[{id:"About-ACLService",title:"About ACLService",h:2},{id:"Usage",title:"Usage",h:2},{id:"API",title:"API",h:2},{id:"PixelmonACLConfig",title:"PixelmonACLConfig",h:3},{id:"ACLService",title:"ACLService",h:3},{id:"ACLCanType",title:"ACLCanType",h:3},{id:"ACLType",title:"ACLType",h:3}]},"zh-CN":{content:'<section class="markdown"><p>ACL \u5168\u79f0\u53eb\u8bbf\u95ee\u63a7\u5236\u5217\u8868\uff08Access Control List\uff09\uff0c\u662f\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u7684\u57fa\u4e8e\u89d2\u8272\u6743\u9650\u63a7\u5236\u65b9\u5f0f\u3002\u4e00\u4e2a\u5b8c\u5168\u72ec\u7acb <code>@pixelmon/acl</code> \u6a21\u5757\uff08<a target="_blank" href="//1ziton.github.io/1ziton/#/logics/acl" data-url="//1ziton.github.io/1ziton/#/logics/acl">DEMO</a>\uff09\u3002</p><h2 id="\u5982\u4f55\u8fd0\u884c">\u5982\u4f55\u8fd0\u884c<a onclick="window.location.hash = \'\u5982\u4f55\u8fd0\u884c\'" class="anchor">#</a></h2><p>\u5185\u90e8\u5b9e\u9645\u662f\u4e00\u4e2a <code>ACLService</code> \u5b83\u63d0\u4f9b\u4e00\u5957\u57fa\u4e8e\u89d2\u8272\u6743\u9650\u670d\u52a1\u7c7b\u3002\u4e3a\u4e86\u66f4\u597d\u7684\u7f16\u7801\u4f53\u9a8c Pixelmon \u6709\u591a\u5904\u7ec4\u4ef6\u6216\u6a21\u5757\u4e5f\u4f9d\u8d56\u4e8e\u5b83\uff0c\u4f8b\u5982\uff1a<code>st</code>\u3001<code>MenuService</code> \u7b49\uff0c\u5e76\u4e14\u8fd9\u4e9b\u4f1a\u4ee5 <code>acl</code> \u5c5e\u6027\u7684\u5f62\u5f0f\u8868\u73b0\u3002\u56e0\u6b64\uff0c\u5f53\u9047\u5230 <code>acl</code> \u5c5e\u6027\u90fd\u8868\u793a <a href="#ACLCanType" data-url="#ACLCanType">can</a> \u65b9\u6cd5\u7684<strong>\u53c2\u6570\u503c</strong>\u3002</p><h2 id="\u5982\u4f55\u4f7f\u7528">\u5982\u4f55\u4f7f\u7528<a onclick="window.location.hash = \'\u5982\u4f55\u4f7f\u7528\'" class="anchor">#</a></h2><p>\u5b89\u88c5 <code>@pixelmon/acl</code> \u4f9d\u8d56\u5305\uff1a</p><pre class="hljs language-bash"><code>yarn add @pixelmon/acl</code></pre><p>\u6216</p><pre class="hljs language-bash"><code>npm i @pixelmon/acl</code></pre><p>\u5bfc\u5165 <code>PixelmonACLModule</code> \u6a21\u5757\uff1a</p><pre class="hljs language-typescript"><code>import { PixelmonACLModule } from \'@pixelmon/acl\';\n\n@NgModule({\n  imports: [PixelmonACLModule.forRoot()],\n})\nexport class AppModule {}</code></pre></section>',api:'<h2 id="API">API<a onclick="window.location.hash = \'API\'" class="anchor">#</a></h2><h3 id="PixelmonACLConfig">PixelmonACLConfig<a onclick="window.location.hash = \'PixelmonACLConfig\'" class="anchor">#</a></h3><table><thead><tr><th>\u5c5e\u6027</th><th>\u7c7b\u578b</th><th>\u8bf4\u660e</th><th>\u9ed8\u8ba4</th></tr></thead><tbody><tr><td><code>[guard_url]</code></td><td><code>string</code></td><td>\u8def\u7531\u5b88\u536b\u5931\u8d25\u540e\u8df3\u8f6c</td><td><code>/403</code></td></tr><tr><td><code>[preCan]</code></td><td><code>(roleOrAbility: <a data-toc="ACLCanType">ACLCanType</a>) => <a data-toc="ACLType">ACLType</a></code></td><td><code>can</code> \u6267\u884c\u524d\u56de\u8c03</td><td>-</td></tr></tbody></table><h3 id="ACLService">ACLService<a onclick="window.location.hash = \'ACLService\'" class="anchor">#</a></h3><p>ACLService \u63d0\u4f9b\u4e00\u4e2a\u5b8c\u6574\u7684\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236\u7684\u670d\u52a1\uff0c\u82e5\u9700\u8981\u652f\u6301\u8def\u7531\u5b88\u536b\uff0c\u8bf7\u914d\u5408 ACLService \u4e0e Route Guard \u914d\u5408\u7b80\u4fbf\u5b9e\u73b0\u3002</p><table><thead><tr><th>\u65b9\u6cd5</th><th>\u8bf4\u660e</th></tr></thead><tbody><tr><td><code>[change]</code></td><td>\u76d1\u542c ACL \u53d8\u66f4\u901a\u77e5</td></tr><tr><td><code>[data]</code></td><td>\u83b7\u53d6\u6240\u6709 ACL \u6570\u636e</td></tr><tr><td><code>setFull(val: boolean)</code></td><td>\u6807\u8bc6\u5f53\u524d\u7528\u6237\u4e3a\u5168\u91cf\uff0c\u5373\u4e0d\u53d7\u9650</td></tr><tr><td><code>set(value: <a data-toc="ACLType">ACLType</a>)</code></td><td>\u8bbe\u7f6e\u5f53\u524d\u7528\u6237\u89d2\u8272\u6216\u6743\u9650\u80fd\u529b\uff08\u4f1a\u5148\u6e05\u9664\u6240\u6709\uff09</td></tr><tr><td><code>setRole(roles: string[])</code></td><td>\u8bbe\u7f6e\u5f53\u524d\u7528\u6237\u89d2\u8272\uff08\u4f1a\u5148\u6e05\u9664\u6240\u6709\uff09</td></tr><tr><td><code>setAbility(abilities: (number | string)[])</code></td><td>\u8bbe\u7f6e\u5f53\u524d\u7528\u6237\u6743\u9650\u80fd\u529b\uff08\u4f1a\u5148\u6e05\u9664\u6240\u6709\uff09</td></tr><tr><td><code>add(value: <a data-toc="ACLType">ACLType</a>)</code></td><td>\u4e3a\u5f53\u524d\u7528\u6237\u589e\u52a0\u89d2\u8272\u6216\u6743\u9650\u80fd\u529b</td></tr><tr><td><code>attachRole(roles: string[])</code></td><td>\u4e3a\u5f53\u524d\u7528\u6237\u9644\u52a0\u89d2\u8272</td></tr><tr><td><code>attachAbility(abilities: (number | string)[])</code></td><td>\u4e3a\u5f53\u524d\u7528\u6237\u9644\u52a0\u6743\u9650</td></tr><tr><td><code>removeRole(roles: string[])</code></td><td>\u4e3a\u5f53\u524d\u7528\u6237\u79fb\u9664\u89d2\u8272</td></tr><tr><td><code>removeAbility(abilities: (number | string)[])</code></td><td>\u4e3a\u5f53\u524d\u7528\u6237\u79fb\u9664\u6743\u9650</td></tr><tr><td><code>can(roleOrAbility: <a data-toc="ACLCanType">ACLCanType</a>)</code></td><td>\u5f53\u524d\u7528\u6237\u662f\u5426\u6709\u5bf9\u5e94\u89d2\u8272</td></tr><tr><td><code>canAbility(ability: <a data-toc="ACLCanType">ACLCanType</a>)</code></td><td>\u5f53\u524d\u7528\u6237\u662f\u5426\u6709\u5bf9\u5e94\u6743\u9650\u70b9</td></tr></tbody></table><h3 id="ACLCanType">ACLCanType<a onclick="window.location.hash = \'ACLCanType\'" class="anchor">#</a></h3><pre class="hljs language-ts"><code>type ACLCanType = number | number[] | string | string[] | ACLType;</code></pre><h3 id="ACLType">ACLType<a onclick="window.location.hash = \'ACLType\'" class="anchor">#</a></h3><table><thead><tr><th>\u5c5e\u6027</th><th>\u7c7b\u578b</th><th>\u8bf4\u660e</th><th>\u9ed8\u8ba4</th></tr></thead><tbody><tr><td><code>[role]</code></td><td><code>string[]</code></td><td>\u89d2\u8272</td><td>-</td></tr><tr><td><code>[ability]</code></td><td><code>number[], string[]</code></td><td>\u6743\u9650\u70b9</td><td>-</td></tr><tr><td><code>[mode]</code></td><td><code>allOf, oneOf</code></td><td><code>allOf</code> \u8868\u793a\u5fc5\u987b\u6ee1\u8db3\u6240\u6709\u89d2\u8272\u6216\u6743\u9650\u70b9\u6570\u7ec4\u7b97\u6709\u6548<br><code>oneOf</code> \u8868\u793a\u53ea\u987b\u6ee1\u8db3\u89d2\u8272\u6216\u6743\u9650\u70b9\u6570\u7ec4\u4e2d\u7684\u4e00\u9879\u7b97\u6709\u6548</td><td><code>oneOf</code></td></tr><tr><td><code>[except]</code></td><td><code>boolean</code></td><td>\u662f\u5426\u53d6\u53cd\uff0c\u5373\u7ed3\u679c\u4e3a <code>true</code> \u65f6\u8868\u793a\u672a\u6388\u6743</td><td><code>false</code></td></tr></tbody></table>',meta:{order:1,title:"\u5f00\u59cb\u4f7f\u7528",type:"Documents",module:"PixelmonACLModule",config:"PixelmonACLConfig"},toc:[{id:"\u5982\u4f55\u8fd0\u884c",title:"\u5982\u4f55\u8fd0\u884c",h:2},{id:"\u5982\u4f55\u4f7f\u7528",title:"\u5982\u4f55\u4f7f\u7528",h:2},{id:"API",title:"API",h:2},{id:"PixelmonACLConfig",title:"PixelmonACLConfig",h:3},{id:"ACLService",title:"ACLService",h:3},{id:"ACLCanType",title:"ACLCanType",h:3},{id:"ACLType",title:"ACLType",h:3}]}},demo:!1},this.codes=[]}}class c{constructor(){this.item={cols:1,urls:{"en-US":"packages/acl/docs/guard.en-US.md","zh-CN":"packages/acl/docs/guard.zh-CN.md"},content:{"en-US":{content:"<section class=\"markdown\"><article><h2 id=\"Foreword\">Foreword<a onclick=\"window.location.hash = 'Foreword'\" class=\"anchor\">#</a></h2><p>Routing guard prevent unauthorized users visit the page.</p><p><code>@pixelmon/acl</code> implements the generic guard class <code>ACLGuard</code>, which allows for complex operations through simple configuration in route registration, and supports the <code>Observable</code> type.</p><p>Use the fixed attribute <code>guard</code> to specify the <code>ACLCanType</code> parameter value, for example:</p><pre class=\"hljs language-ts\"><code>const routes: Routes = [\n  {\n    path: 'auth',\n    canActivate: [ACLGuard],\n    data: { guard: 'user1' },\n  },\n  {\n    path: 'auth',\n    canActivate: [ACLGuard],\n    data: {\n      guard: <ACLType>{\n        role: ['user1'],\n        ability: [10, 'USER-EDIT'],\n        mode: 'allOf',\n      },\n    },\n  },\n];</code></pre><blockquote><p>The value of <code>guard</code> must match the value of <a href=\"/acl/api#ACLCanType\" data-url=\"/acl/api#ACLCanType\">ACLCanType</a>.</p></blockquote><h2 id=\"DEMO\">DEMO<a onclick=\"window.location.hash = 'DEMO'\" class=\"anchor\">#</a></h2><pre class=\"hljs language-ts\"><code>import { of } from 'rxjs';\nimport { ACLGuard } from '@pixelmon/acl';\nconst routes: Routes = [\n  {\n    path: 'guard',\n    component: GuardComponent,\n    children: [\n      { path: 'auth', component: GuardAuthComponent, canActivate: [ACLGuard], data: { guard: 'user1' } },\n      { path: 'admin', component: GuardAdminComponent, canActivate: [ACLGuard], data: { guard: 'admin' } },\n    ],\n    canActivateChild: [ACLGuard],\n    data: { guard: <ACLType>{ role: ['user1'], ability: [10, 'USER-EDIT'], mode: 'allOf' } },\n  },\n  { path: 'pro', loadChildren: './pro/pro.module#ProModule', canLoad: [ACLGuard], data: { guard: 1 } },\n  { path: 'pro', loadChildren: './pro/pro.module#ProModule', canLoad: [ACLGuard], data: { guard: of(false).pipe(map(v => 'admin')) } },\n];</code></pre></article></section>",meta:{order:3,title:"Guard",type:"Documents"},toc:[{id:"Foreword",title:"Foreword",h:2},{id:"DEMO",title:"DEMO",h:2}]},"zh-CN":{content:"<section class=\"markdown\"><article><h2 id=\"\u5199\u5728\u524d\u9762\">\u5199\u5728\u524d\u9762<a onclick=\"window.location.hash = '\u5199\u5728\u524d\u9762'\" class=\"anchor\">#</a></h2><p>\u8def\u7531\u5b88\u536b\u53ef\u4ee5\u9632\u6b62\u672a\u6388\u6743\u7528\u6237\u8bbf\u95ee\u9875\u9762\u3002</p><p>\u8def\u7531\u5b88\u536b\u9700\u8981\u5355\u72ec\u5bf9\u6bcf\u4e00\u4e2a\u8def\u7531\u8fdb\u884c\u8bbe\u7f6e\uff0c\u5f88\u591a\u65f6\u5019\u8fd9\u770b\u8d77\u6765\u5f88\u7e41\u7410\uff0c<code>@pixelmon/acl</code> \u5b9e\u73b0\u4e86\u901a\u7528\u5b88\u536b\u7c7b <code>ACLGuard</code>\uff0c\u53ef\u4ee5\u5728\u8def\u7531\u6ce8\u518c\u65f6\u900f\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5b8c\u6210\u4e00\u4e9b\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u751a\u81f3\u652f\u6301 <code>Observable</code> \u7c7b\u578b\u3002</p><p>\u4f7f\u7528\u56fa\u5b9a\u5c5e\u6027 <code>guard</code> \u6765\u6307\u5b9a <code>ACLCanType</code> \u53c2\u6570\uff0c\u4f8b\u5982\uff1a</p><pre class=\"hljs language-ts\"><code>const routes: Routes = [\n  {\n    path: 'auth',\n    canActivate: [ACLGuard],\n    data: { guard: 'user1' },\n  },\n  {\n    path: 'auth',\n    canActivate: [ACLGuard],\n    data: {\n      guard: <ACLType>{\n        role: ['user1'],\n        ability: [10, 'USER-EDIT'],\n        mode: 'allOf',\n      },\n    },\n  },\n];</code></pre><blockquote><p><code>guard</code> \u7684\u503c\u5fc5\u987b\u7b26\u5408 <a href=\"/acl/getting-started#ACLCanType\" data-url=\"/acl/getting-started#ACLCanType\">ACLCanType</a> \u7c7b\u578b\u503c\u3002</p></blockquote><h2 id=\"\u793a\u4f8b\">\u793a\u4f8b<a onclick=\"window.location.hash = '\u793a\u4f8b'\" class=\"anchor\">#</a></h2><pre class=\"hljs language-ts\"><code>import { of } from 'rxjs';\nimport { ACLGuard } from '@pixelmon/acl';\nconst routes: Routes = [\n  {\n    path: 'guard',\n    component: GuardComponent,\n    children: [\n      // \u89d2\u8272\u9650\u5b9a\n      { path: 'auth', component: GuardAuthComponent, canActivate: [ACLGuard], data: { guard: 'user1' } },\n      { path: 'admin', component: GuardAdminComponent, canActivate: [ACLGuard], data: { guard: 'admin' } },\n    ],\n    // \u6240\u6709\u5b50\u8def\u7531\u6709\u6548\n    canActivateChild: [ACLGuard],\n    data: { guard: <ACLType>{ role: ['user1'], ability: [10, 'USER-EDIT'], mode: 'allOf' } },\n  },\n  // \u6743\u9650\u70b9\u9650\u5b9a\n  { path: 'pro', loadChildren: './pro/pro.module#ProModule', canLoad: [ACLGuard], data: { guard: 1 } },\n  // \u6216\u4f7f\u7528Observable\u5b9e\u73b0\u66f4\u590d\u6742\u7684\u884c\u4e3a\n  { path: 'pro', loadChildren: './pro/pro.module#ProModule', canLoad: [ACLGuard], data: { guard: of(false).pipe(map(v => 'admin')) } },\n];</code></pre></article></section>",meta:{order:3,title:"\u8def\u7531\u5b88\u536b",type:"Documents"},toc:[{id:"\u5199\u5728\u524d\u9762",title:"\u5199\u5728\u524d\u9762",h:2},{id:"\u793a\u4f8b",title:"\u793a\u4f8b",h:2}]}},demo:!1},this.codes=[]}}class r{}var i=a("pMnS"),s=a("EdU/"),h=a("/Yna"),g=a("JRKe"),p=a("Ed4d"),u=a("8WaK"),b=a("QfCi"),m=a("CghO"),C=a("Sq/J"),A=a("mHlG"),y=a("9BMt"),f=a("kRch"),H=a("QkPN"),L=a("vBNu"),w=a("Z7t+"),T=a("II6v"),v=a("MRB6"),x=a("uU7u"),P=a("iInd"),I=a("cUpR"),k=o.vb({encapsulation:0,styles:["[_nghost-%COMP%] { display: block }"],data:{}});function S(t){return o.Tb(0,[(t()(),o.xb(0,0,null,null,1,"app-docs",[],null,null,null,w.b,w.a)),o.wb(1,245760,null,0,T.a,[v.a,x.a,P.o,I.b],{codes:[0,"codes"],item:[1,"item"]},null)],function(t,e){var a=e.component;t(e,1,0,a.codes,a.item)},null)}function z(t){return o.Tb(0,[(t()(),o.xb(0,0,null,null,1,"app-acl-control",[],null,null,null,S,k)),o.wb(1,49152,null,0,d,[],null,null)],null,null)}var O=o.tb("app-acl-control",d,z,{},{},[]),M=o.vb({encapsulation:0,styles:["[_nghost-%COMP%] { display: block }"],data:{}});function R(t){return o.Tb(0,[(t()(),o.xb(0,0,null,null,1,"app-docs",[],null,null,null,w.b,w.a)),o.wb(1,245760,null,0,T.a,[v.a,x.a,P.o,I.b],{codes:[0,"codes"],item:[1,"item"]},null)],function(t,e){var a=e.component;t(e,1,0,a.codes,a.item)},null)}function D(t){return o.Tb(0,[(t()(),o.xb(0,0,null,null,1,"app-acl-getting-started",[],null,null,null,R,M)),o.wb(1,49152,null,0,n,[],null,null)],null,null)}var j=o.tb("app-acl-getting-started",n,D,{},{},[]),E=o.vb({encapsulation:0,styles:["[_nghost-%COMP%] { display: block }"],data:{}});function G(t){return o.Tb(0,[(t()(),o.xb(0,0,null,null,1,"app-docs",[],null,null,null,w.b,w.a)),o.wb(1,245760,null,0,T.a,[v.a,x.a,P.o,I.b],{codes:[0,"codes"],item:[1,"item"]},null)],function(t,e){var a=e.component;t(e,1,0,a.codes,a.item)},null)}function U(t){return o.Tb(0,[(t()(),o.xb(0,0,null,null,1,"app-acl-guard",[],null,null,null,G,E)),o.wb(1,49152,null,0,c,[],null,null)],null,null)}var N=o.tb("app-acl-guard",c,U,{},{},[]),F=a("SVse"),q=a("s7LF"),Y=a("5VGP"),B=a("QQfA"),J=a("IP0z"),Q=a("POq0"),V=a("sAdM"),Z=a("ekcc"),W=a("g+Fz"),_=a("Ybye"),X=a("NFMk"),K=a("10Ig"),$=a("iC8E"),tt=a("/HVE"),et=a("v1Dh"),at=a("66zS"),ot=a("5Izy"),lt=a("yTpB"),dt=a("zMNK"),nt=a("hOhj"),ct=a("r19J"),rt=a("anqq"),it=a("IYs4"),st=a("EcpC"),ht=a("GaVp"),gt=a("/L1H"),pt=a("phDe"),ut=a("rJp6"),bt=a("Rgb0"),mt=a("kS4m"),Ct=a("mW00"),At=a("jTf7"),yt=a("WPSl"),ft=a("YdS3"),Ht=a("wQFA"),Lt=a("px0D"),wt=a("3ZFI"),Tt=a("CYS+"),vt=a("oBm0"),xt=a("A7zk"),Pt=a("YRt3"),It=a("lAiz"),kt=a("ce6n"),St=a("SBNi"),zt=a("7QIX"),Ot=a("tYkK"),Mt=a("wf2+"),Rt=a("eCGT"),Dt=a("nHXS"),jt=a("fb/r"),Et=a("zTFG"),Gt=a("JK0T"),Ut=a("JXeA"),Nt=a("0CZq"),Ft=a("qU0y"),qt=a("vZsH"),Yt=a("W4B1"),Bt=a("SHEi"),Jt=a("FPpa"),Qt=a("RVNi"),Vt=a("NDed"),Zt=a("5A4h"),Wt=a("N2O2"),_t=a("ozKM"),Xt=a("OvZZ"),Kt=a("z+yo"),$t=a("DQmg"),te=a("haRT"),ee=a("1+nf"),ae=a("XFzh"),oe=a("p+Sl"),le=a("HhpN"),de=a("SN7N"),ne=a("fwnu"),ce=a("VbP7"),re=a("gaRz"),ie=a("e15G"),se=a("y+Ew"),he=a("cZe8"),ge=a("RU17"),pe=a("+YBk"),ue=a("9J0+"),be=a("tFO0"),me=a("+Lgp"),Ce=a("vIiB"),Ae=a("kB3X"),ye=a("CVg0"),fe=a("oEQ7"),He=a("AIZb"),Le=a("XeAm"),we=a("0r5P"),Te=a("VE6v"),ve=a("PGh0"),xe=a("rQ3v"),Pe=a("0JZw"),Ie=a("MR+B"),ke=a("tZY3"),Se=a("QQcO"),ze=a("Xoul"),Oe=a("RCZh"),Me=a("LBQj"),Re=a("NnDh"),De=a("HZuH"),je=a("GgO0"),Ee=a("vrge"),Ge=a("nMAq"),Ue=a("5PV9"),Ne=a("nIn3"),Fe=a("xo13"),qe=a("CnVV"),Ye=a("5p8d"),Be=a("qYUw"),Je=a("JpOc"),Qe=a("VRoF"),Ve=a("Uto7"),Ze=a("/p+U"),We=a("ye40"),_e=a("qcxY"),Xe=a("T+Em"),Ke=a("ucmY"),$e=a("76lH"),ta=a("TSSN"),ea=a("Fg/6"),aa=a("kzz5"),oa=a("SqF5"),la=a("Wl7g"),da=a("+TYD"),na=a("PCNd");a.d(e,"AclModuleNgFactory",function(){return ca});var ca=o.ub(r,[],function(t){return o.Gb([o.Hb(512,o.j,o.eb,[[8,[i.a,s.a,s.b,h.a,g.a,p.a,u.a,b.a,m.a,C.a,A.a,y.a,f.a,H.a,L.a,O,j,N]],[3,o.j],o.x]),o.Hb(4608,F.o,F.n,[o.u,[2,F.J]]),o.Hb(4608,q.w,q.w,[]),o.Hb(4608,q.e,q.e,[]),o.Hb(5120,Y.y,Y.L,[F.d,[3,Y.y]]),o.Hb(4608,B.d,B.d,[B.k,B.f,o.j,B.i,B.g,o.r,o.z,F.d,J.b,[2,F.i]]),o.Hb(5120,B.l,B.m,[B.d]),o.Hb(4608,Q.c,Q.c,[]),o.Hb(5120,V.b,V.a,[[3,V.b],Z.a]),o.Hb(4608,W.c,W.c,[F.d]),o.Hb(4608,_.a,_.a,[X.g]),o.Hb(4608,K.a,K.a,[$.d]),o.Hb(1073742336,F.b,F.b,[]),o.Hb(1073742336,q.v,q.v,[]),o.Hb(1073742336,q.j,q.j,[]),o.Hb(1073742336,P.s,P.s,[[2,P.x],[2,P.o]]),o.Hb(1073742336,q.s,q.s,[]),o.Hb(1073742336,tt.b,tt.b,[]),o.Hb(1073742336,et.b,et.b,[]),o.Hb(1073742336,at.c,at.c,[]),o.Hb(1073742336,Y.j,Y.j,[]),o.Hb(1073742336,ot.b,ot.b,[]),o.Hb(1073742336,lt.a,lt.a,[]),o.Hb(1073742336,J.a,J.a,[]),o.Hb(1073742336,dt.e,dt.e,[]),o.Hb(1073742336,nt.g,nt.g,[]),o.Hb(1073742336,B.h,B.h,[]),o.Hb(1073742336,Y.v,Y.v,[]),o.Hb(1073742336,ct.a,ct.a,[]),o.Hb(1073742336,rt.b,rt.b,[]),o.Hb(1073742336,it.b,it.b,[]),o.Hb(1073742336,Q.d,Q.d,[]),o.Hb(1073742336,st.b,st.b,[]),o.Hb(1073742336,Y.I,Y.I,[]),o.Hb(1073742336,ht.c,ht.c,[]),o.Hb(1073742336,Y.w,Y.w,[]),o.Hb(1073742336,gt.e,gt.e,[]),o.Hb(1073742336,pt.h,pt.h,[]),o.Hb(1073742336,pt.a,pt.a,[]),o.Hb(1073742336,pt.e,pt.e,[]),o.Hb(1073742336,ut.c,ut.c,[]),o.Hb(1073742336,bt.b,bt.b,[]),o.Hb(1073742336,mt.d,mt.d,[]),o.Hb(1073742336,Ct.c,Ct.c,[]),o.Hb(1073742336,At.h,At.h,[]),o.Hb(1073742336,yt.f,yt.f,[]),o.Hb(1073742336,ft.d,ft.d,[]),o.Hb(1073742336,Ht.a,Ht.a,[]),o.Hb(1073742336,Y.r,Y.r,[]),o.Hb(1073742336,Lt.d,Lt.d,[]),o.Hb(1073742336,wt.a,wt.a,[]),o.Hb(1073742336,Tt.c,Tt.c,[]),o.Hb(1073742336,vt.a,vt.a,[]),o.Hb(1073742336,xt.a,xt.a,[]),o.Hb(1073742336,Pt.b,Pt.b,[]),o.Hb(1073742336,It.g,It.g,[]),o.Hb(1073742336,It.b,It.b,[]),o.Hb(1073742336,kt.a,kt.a,[]),o.Hb(1073742336,St.b,St.b,[]),o.Hb(1073742336,$.e,$.e,[]),o.Hb(1073742336,$.b,$.b,[]),o.Hb(1073742336,zt.b,zt.b,[]),o.Hb(1073742336,Ot.b,Ot.b,[]),o.Hb(1073742336,Mt.g,Mt.g,[]),o.Hb(1073742336,Rt.a,Rt.a,[]),o.Hb(1073742336,Dt.a,Dt.a,[]),o.Hb(1073742336,jt.b,jt.b,[]),o.Hb(1073742336,Et.d,Et.d,[]),o.Hb(1073742336,Gt.a,Gt.a,[]),o.Hb(1073742336,Ut.h,Ut.h,[]),o.Hb(1073742336,Ut.f,Ut.f,[]),o.Hb(1073742336,Y.x,Y.x,[]),o.Hb(1073742336,X.h,X.h,[]),o.Hb(1073742336,X.d,X.d,[]),o.Hb(1073742336,X.e,X.e,[]),o.Hb(1073742336,Nt.f,Nt.f,[]),o.Hb(1073742336,Nt.e,Nt.e,[]),o.Hb(1073742336,Ft.a,Ft.a,[]),o.Hb(1073742336,qt.b,qt.b,[]),o.Hb(1073742336,Yt.b,Yt.b,[]),o.Hb(1073742336,Bt.b,Bt.b,[]),o.Hb(1073742336,Jt.c,Jt.c,[]),o.Hb(1073742336,Qt.b,Qt.b,[]),o.Hb(1073742336,Vt.a,Vt.a,[]),o.Hb(1073742336,Zt.a,Zt.a,[]),o.Hb(1073742336,Wt.b,Wt.b,[]),o.Hb(1073742336,_t.a,_t.a,[]),o.Hb(1073742336,Xt.a,Xt.a,[]),o.Hb(1073742336,Kt.a,Kt.a,[]),o.Hb(1073742336,$t.b,$t.b,[]),o.Hb(1073742336,te.b,te.b,[]),o.Hb(1073742336,ee.f,ee.f,[]),o.Hb(1073742336,ae.b,ae.b,[]),o.Hb(1073742336,oe.a,oe.a,[]),o.Hb(1073742336,Y.C,Y.C,[]),o.Hb(1073742336,le.a,le.a,[]),o.Hb(1073742336,de.b,de.b,[]),o.Hb(1073742336,ne.b,ne.b,[]),o.Hb(1073742336,Y.o,Y.o,[]),o.Hb(1073742336,ce.a,ce.a,[]),o.Hb(1073742336,re.d,re.d,[]),o.Hb(1073742336,ie.a,ie.a,[]),o.Hb(1073742336,se.b,se.b,[]),o.Hb(1073742336,he.b,he.b,[]),o.Hb(1073742336,ge.b,ge.b,[]),o.Hb(1073742336,pe.a,pe.a,[]),o.Hb(1073742336,ue.a,ue.a,[at.d]),o.Hb(1073742336,be.a,be.a,[]),o.Hb(1073742336,me.a,me.a,[]),o.Hb(1073742336,Ce.a,Ce.a,[]),o.Hb(1073742336,Ae.a,Ae.a,[]),o.Hb(1073742336,ye.a,ye.a,[]),o.Hb(1073742336,fe.a,fe.a,[]),o.Hb(1073742336,He.a,He.a,[]),o.Hb(1073742336,Le.a,Le.a,[]),o.Hb(1073742336,we.a,we.a,[]),o.Hb(1073742336,Te.a,Te.a,[]),o.Hb(1073742336,ve.a,ve.a,[]),o.Hb(1073742336,xe.a,xe.a,[]),o.Hb(1073742336,Pe.a,Pe.a,[]),o.Hb(1073742336,Ie.a,Ie.a,[]),o.Hb(1073742336,ke.a,ke.a,[]),o.Hb(1073742336,Se.a,Se.a,[]),o.Hb(1073742336,ze.a,ze.a,[]),o.Hb(1073742336,Oe.b,Oe.b,[]),o.Hb(1073742336,Me.a,Me.a,[]),o.Hb(1073742336,Re.a,Re.a,[]),o.Hb(1073742336,De.a,De.a,[]),o.Hb(1073742336,je.a,je.a,[]),o.Hb(1073742336,Ee.a,Ee.a,[]),o.Hb(1073742336,Ge.a,Ge.a,[]),o.Hb(1073742336,Ue.a,Ue.a,[]),o.Hb(1073742336,Ne.a,Ne.a,[]),o.Hb(1073742336,Fe.a,Fe.a,[]),o.Hb(1073742336,qe.a,qe.a,[]),o.Hb(1073742336,Ye.a,Ye.a,[]),o.Hb(1073742336,Be.a,Be.a,[]),o.Hb(1073742336,Je.a,Je.a,[]),o.Hb(1073742336,Qe.a,Qe.a,[]),o.Hb(1073742336,Ve.a,Ve.a,[]),o.Hb(1073742336,Ze.a,Ze.a,[]),o.Hb(1073742336,We.a,We.a,[]),o.Hb(1073742336,_e.a,_e.a,[]),o.Hb(1073742336,Xe.a,Xe.a,[]),o.Hb(1073742336,Ke.a,Ke.a,[]),o.Hb(1073742336,$e.a,$e.a,[]),o.Hb(1073742336,ta.h,ta.h,[]),o.Hb(1073742336,ea.a,ea.a,[]),o.Hb(1073742336,aa.a,aa.a,[]),o.Hb(1073742336,W.b,W.b,[]),o.Hb(1073742336,oa.b,oa.b,[]),o.Hb(1073742336,la.d,la.d,[]),o.Hb(1073742336,la.h,la.h,[]),o.Hb(1073742336,la.b,la.b,[]),o.Hb(1073742336,la.j,la.j,[]),o.Hb(1073742336,la.l,la.l,[]),o.Hb(1073742336,la.p,la.p,[]),o.Hb(1073742336,la.t,la.t,[]),o.Hb(1073742336,da.a,da.a,[]),o.Hb(1073742336,na.a,na.a,[]),o.Hb(1073742336,r,r,[]),o.Hb(256,Ut.b,{nzAnimate:!0,nzDuration:3e3,nzMaxStack:7,nzPauseOnHover:!0,nzTop:24},[]),o.Hb(256,Nt.b,{nzTop:"24px",nzBottom:"24px",nzPlacement:"topRight",nzDuration:4500,nzMaxStack:7,nzPauseOnHover:!0,nzAnimate:!0},[]),o.Hb(256,Z.a,pe.b,[]),o.Hb(256,at.a,Re.b,[]),o.Hb(1024,P.m,function(){return[[{path:"",component:l.a,children:[{path:"",redirectTo:"getting-started/zh",pathMatch:"full"},{path:"control",redirectTo:"control/zh",pathMatch:"full"},{path:"control/:lang",component:d},{path:"getting-started",redirectTo:"getting-started/zh",pathMatch:"full"},{path:"getting-started/:lang",component:n},{path:"guard",redirectTo:"guard/zh",pathMatch:"full"},{path:"guard/:lang",component:c}]}]]},[])])})}}]);